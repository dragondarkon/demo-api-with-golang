{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "microk8s",
                "selfLink": "/api/v1/nodes/microk8s",
                "uid": "fe7bfadd-76e7-42cf-b10b-df987a9b8233",
                "resourceVersion": "42178",
                "creationTimestamp": "2020-03-11T10:19:14Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "microk8s",
                    "kubernetes.io/os": "linux",
                    "microk8s.io/cluster": "true"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {},
            "status": {
                "capacity": {
                    "cpu": "1",
                    "ephemeral-storage": "102684600Ki",
                    "hugepages-2Mi": "0",
                    "memory": "1008804Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "1",
                    "ephemeral-storage": "101636024Ki",
                    "hugepages-2Mi": "0",
                    "memory": "906404Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-03-12T08:39:53Z",
                        "lastTransitionTime": "2020-03-11T10:19:14Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-03-12T08:39:53Z",
                        "lastTransitionTime": "2020-03-11T10:19:14Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2020-03-12T08:39:53Z",
                        "lastTransitionTime": "2020-03-11T10:19:14Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2020-03-12T08:39:53Z",
                        "lastTransitionTime": "2020-03-12T08:04:51Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.0.2.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "microk8s"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "812224c953644f1997a63e89e26697de",
                    "systemUUID": "B5DE87A2-3C95-0D47-BCEF-18A7E611C8DA",
                    "bootID": "f20d32ab-c398-49bc-a95c-efd12d6622b1",
                    "kernelVersion": "4.15.0-88-generic",
                    "osImage": "Ubuntu 18.04.4 LTS",
                    "containerRuntimeVersion": "containerd://1.2.5",
                    "kubeletVersion": "v1.17.3",
                    "kubeProxyVersion": "v1.17.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "quay.io/kubernetes-ingress-controller/nginx-ingress-controller-amd64:0.25.1"
                        ],
                        "sizeBytes": 205038326
                    },
                    {
                        "names": [
                            "docker.io/library/nginx@sha256:2539d4344dd18e1df02be842ffc435f8e1f699cfc55516e2cf2cb16b7a9aea0b",
                            "docker.io/library/nginx:latest"
                        ],
                        "sizeBytes": 51021980
                    },
                    {
                        "names": [
                            "docker.io/coredns/coredns@sha256:41bee6992c2ed0f4628fcef75751048927bcd6b1cee89c79f6acb63ca5474d5a",
                            "docker.io/coredns/coredns:1.6.6"
                        ],
                        "sizeBytes": 12932169
                    },
                    {
                        "names": [
                            "docker.io/dragondarkon/api@sha256:7becbc9448c963f682ddf6eb08c463c9a8aa0d123184eca3deb5b5bded63280d",
                            "docker.io/dragondarkon/api:latest"
                        ],
                        "sizeBytes": 7172899
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause@sha256:f78411e19d84a252e53bff71a4407a5686c46983a2c2eeed83929b888179acea",
                            "k8s.gcr.io/pause:3.1"
                        ],
                        "sizeBytes": 317164
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-7b67f9f8c-cnthj.15fb7fdd145beaa3",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/coredns-7b67f9f8c-cnthj.15fb7fdd145beaa3",
                "uid": "e91d59f5-5dba-44f0-bdeb-86853a20f9b2",
                "resourceVersion": "39342",
                "creationTimestamp": "2020-03-12T08:04:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7b67f9f8c-cnthj",
                "uid": "914900d1-4544-4a2d-acff-553cfbd1a985",
                "apiVersion": "v1",
                "resourceVersion": "15763"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "microk8s"
            },
            "firstTimestamp": "2020-03-12T08:04:41Z",
            "lastTimestamp": "2020-03-12T08:04:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7b67f9f8c-cnthj.15fb7fdd9060de8b",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/coredns-7b67f9f8c-cnthj.15fb7fdd9060de8b",
                "uid": "11db895b-0e9d-4092-b8b5-7fc1e1700517",
                "resourceVersion": "39347",
                "creationTimestamp": "2020-03-12T08:04:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7b67f9f8c-cnthj",
                "uid": "914900d1-4544-4a2d-acff-553cfbd1a985",
                "apiVersion": "v1",
                "resourceVersion": "15763",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"coredns/coredns:1.6.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "microk8s"
            },
            "firstTimestamp": "2020-03-12T08:04:43Z",
            "lastTimestamp": "2020-03-12T08:04:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7b67f9f8c-cnthj.15fb7fdd9fd695d5",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/coredns-7b67f9f8c-cnthj.15fb7fdd9fd695d5",
                "uid": "6d6aaf2f-981d-49a6-8a89-aac1394cf736",
                "resourceVersion": "39349",
                "creationTimestamp": "2020-03-12T08:04:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7b67f9f8c-cnthj",
                "uid": "914900d1-4544-4a2d-acff-553cfbd1a985",
                "apiVersion": "v1",
                "resourceVersion": "15763",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "microk8s"
            },
            "firstTimestamp": "2020-03-12T08:04:43Z",
            "lastTimestamp": "2020-03-12T08:04:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7b67f9f8c-cnthj.15fb7fddb31f031b",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/coredns-7b67f9f8c-cnthj.15fb7fddb31f031b",
                "uid": "945dabf8-4718-4e16-99b5-e4455f90769b",
                "resourceVersion": "39351",
                "creationTimestamp": "2020-03-12T08:04:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7b67f9f8c-cnthj",
                "uid": "914900d1-4544-4a2d-acff-553cfbd1a985",
                "apiVersion": "v1",
                "resourceVersion": "15763",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "microk8s"
            },
            "firstTimestamp": "2020-03-12T08:04:44Z",
            "lastTimestamp": "2020-03-12T08:04:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.15fb7fdaa94e7add",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/kube-scheduler.15fb7fdaa94e7add",
                "uid": "e1857a43-ec22-466e-91ef-9468856f1b81",
                "resourceVersion": "39318",
                "creationTimestamp": "2020-03-12T08:04:31Z"
            },
            "involvedObject": {
                "kind": "Endpoints",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "9808b662-8e20-4d6e-b030-7f5639a9b609",
                "apiVersion": "v1",
                "resourceVersion": "39316"
            },
            "reason": "LeaderElection",
            "message": "microk8s_8cc3572b-9ca6-4ec9-a6ce-f972148669e5 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2020-03-12T08:04:31Z",
            "lastTimestamp": "2020-03-12T08:04:31Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.15fb7fdaab5c7d0f",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/events/kube-scheduler.15fb7fdaab5c7d0f",
                "uid": "e875f4c5-40d4-4258-aca3-015ae0b0c6f9",
                "resourceVersion": "39319",
                "creationTimestamp": "2020-03-12T08:04:31Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "8b248a02-da38-476d-a9b0-f9cca1cba877",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "39317"
            },
            "reason": "LeaderElection",
            "message": "microk8s_8cc3572b-9ca6-4ec9-a6ce-f972148669e5 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2020-03-12T08:04:31Z",
            "lastTimestamp": "2020-03-12T08:04:31Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "42352"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "bf8f93c7-8a5e-4268-be81-9d33bcbfc75f",
                "resourceVersion": "1356",
                "creationTimestamp": "2020-03-11T10:30:57Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.152.183.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"},{\"name\":\"metrics\",\"port\":9153,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.152.183.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "42352"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/coredns",
                "uid": "1adb843d-4926-4f97-9ea5-6a2000878ac6",
                "resourceVersion": "6001",
                "generation": 1,
                "creationTimestamp": "2020-03-11T10:30:57Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"10%\",\"maxUnavailable\":0},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\"},\"labels\":{\"k8s-app\":\"kube-dns\"}},\"spec\":{\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"coredns/coredns:1.6.6\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "scheduler.alpha.kubernetes.io/critical-pod": ""
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "coredns/coredns:1.6.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 0,
                        "maxSurge": "10%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2020-03-11T10:34:49Z",
                        "lastTransitionTime": "2020-03-11T10:30:57Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-7b67f9f8c\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2020-03-11T11:28:09Z",
                        "lastTransitionTime": "2020-03-11T11:28:09Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-7b67f9f8c",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/coredns-7b67f9f8c",
                "uid": "7dd3c89e-386b-46f5-8d42-6dfc119a9c5f",
                "resourceVersion": "5998",
                "generation": 1,
                "creationTimestamp": "2020-03-11T10:30:57Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7b67f9f8c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "1adb843d-4926-4f97-9ea5-6a2000878ac6",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "7b67f9f8c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "7b67f9f8c"
                        },
                        "annotations": {
                            "scheduler.alpha.kubernetes.io/critical-pod": ""
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "coredns/coredns:1.6.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-7b67f9f8c-cnthj",
                "generateName": "coredns-7b67f9f8c-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/coredns-7b67f9f8c-cnthj",
                "uid": "914900d1-4544-4a2d-acff-553cfbd1a985",
                "resourceVersion": "39359",
                "creationTimestamp": "2020-03-11T10:30:57Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7b67f9f8c"
                },
                "annotations": {
                    "scheduler.alpha.kubernetes.io/critical-pod": ""
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7b67f9f8c",
                        "uid": "7dd3c89e-386b-46f5-8d42-6dfc119a9c5f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "coredns-token-st9cd",
                        "secret": {
                            "secretName": "coredns-token-st9cd",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "coredns/coredns:1.6.6",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "coredns-token-st9cd",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "microk8s",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-03-11T10:30:58Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-03-12T08:04:46Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-03-12T08:04:46Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-03-11T10:30:58Z"
                    }
                ],
                "hostIP": "10.0.2.4",
                "podIP": "10.1.67.16",
                "podIPs": [
                    {
                        "ip": "10.1.67.16"
                    }
                ],
                "startTime": "2020-03-11T10:30:58Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2020-03-12T08:04:43Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2020-03-12T03:08:20Z",
                                "finishedAt": "2020-03-12T08:04:00Z",
                                "containerID": "containerd://2f9fea8c246ac014d6cfc784fa5bfe6588c13c9018c0fa26407642ea8a817696"
                            }
                        },
                        "ready": true,
                        "restartCount": 4,
                        "image": "docker.io/coredns/coredns:1.6.6",
                        "imageID": "docker.io/coredns/coredns@sha256:41bee6992c2ed0f4628fcef75751048927bcd6b1cee89c79f6acb63ca5474d5a",
                        "containerID": "containerd://d74b1be18ac53b7ed7271c44f78f15c85befc3632d2fefc013354ac833828962",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-7b67f9f8c-cnthj ====
.:53
[INFO] plugin/reload: Running configuration MD5 = be0f52d3c13480652e0c73672f2fa263
CoreDNS-1.6.6
linux/amd64, go1.13.5, 6a7a75e
==== END logs for container coredns of pod kube-system/coredns-7b67f9f8c-cnthj ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/jirayu/events",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "hello-no-host.15fb7fde3bcc5b68",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/events/hello-no-host.15fb7fde3bcc5b68",
                "uid": "f665daad-0503-4d0a-b91c-f3c46cc9d46e",
                "resourceVersion": "39360",
                "creationTimestamp": "2020-03-12T08:04:46Z"
            },
            "involvedObject": {
                "kind": "Ingress",
                "namespace": "jirayu",
                "name": "hello-no-host",
                "uid": "9e497792-7e42-4f21-84fd-107359feb800",
                "apiVersion": "networking.k8s.io/v1beta1",
                "resourceVersion": "23975"
            },
            "reason": "CREATE",
            "message": "Ingress jirayu/hello-no-host",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2020-03-12T08:04:46Z",
            "lastTimestamp": "2020-03-12T08:04:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "hello.15fb7fde3bca8ee7",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/events/hello.15fb7fde3bca8ee7",
                "uid": "7bfa99ff-6a6e-4563-a289-febc54193d67",
                "resourceVersion": "39361",
                "creationTimestamp": "2020-03-12T08:04:46Z"
            },
            "involvedObject": {
                "kind": "Ingress",
                "namespace": "jirayu",
                "name": "hello",
                "uid": "2b4a1d4a-0648-43b6-8fb5-a33f2b1e1bb2",
                "apiVersion": "networking.k8s.io/v1beta1",
                "resourceVersion": "23416"
            },
            "reason": "CREATE",
            "message": "Ingress jirayu/hello",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2020-03-12T08:04:46Z",
            "lastTimestamp": "2020-03-12T08:04:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "hello.15fb80198da9c54b",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/events/hello.15fb80198da9c54b",
                "uid": "bfa0f3e3-f277-4503-89a8-1881fb1a3fa0",
                "resourceVersion": "39706",
                "creationTimestamp": "2020-03-12T08:09:01Z"
            },
            "involvedObject": {
                "kind": "Ingress",
                "namespace": "jirayu",
                "name": "hello",
                "uid": "2b4a1d4a-0648-43b6-8fb5-a33f2b1e1bb2",
                "apiVersion": "networking.k8s.io/v1beta1",
                "resourceVersion": "39705"
            },
            "reason": "UPDATE",
            "message": "Ingress jirayu/hello",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2020-03-12T08:09:01Z",
            "lastTimestamp": "2020-03-12T08:09:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "nginx.15fb80cf09fb3b08",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/events/nginx.15fb80cf09fb3b08",
                "uid": "6ef57f2e-eb60-4a64-ba66-3c0213088830",
                "resourceVersion": "41080",
                "creationTimestamp": "2020-03-12T08:22:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "jirayu",
                "name": "nginx",
                "uid": "ae1d60ed-3a18-4e06-838e-5b20e471a3b2",
                "apiVersion": "v1",
                "resourceVersion": "40747"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) didn't match node selector.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2020-03-12T08:22:00Z",
            "lastTimestamp": "2020-03-12T08:26:07Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "nginx.15fb81120d7dd6e2",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/events/nginx.15fb81120d7dd6e2",
                "uid": "80674900-e40d-43b5-aca4-926c2df0d5d1",
                "resourceVersion": "41137",
                "creationTimestamp": "2020-03-12T08:26:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "jirayu",
                "name": "nginx",
                "uid": "ae1d60ed-3a18-4e06-838e-5b20e471a3b2",
                "apiVersion": "v1",
                "resourceVersion": "41136"
            },
            "reason": "FailedScheduling",
            "message": "skip schedule deleting pod: jirayu/nginx",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2020-03-12T08:26:48Z",
            "lastTimestamp": "2020-03-12T08:26:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/jirayu/replicationcontrollers",
        "resourceVersion": "42352"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/jirayu/services",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "hello",
                "namespace": "jirayu",
                "selfLink": "/api/v1/namespaces/jirayu/services/hello",
                "uid": "755ca3b5-6a79-412d-abdc-205d5b342f0c",
                "resourceVersion": "39704",
                "creationTimestamp": "2020-03-12T07:45:20Z",
                "labels": {
                    "app": "hello"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"kubernetes.io/change-cause\":\"kubectl apply --filename=completed.yml --record=true\"},\"labels\":{\"app\":\"hello\"},\"name\":\"hello\",\"namespace\":\"jirayu\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":8080}],\"selector\":{\"app\":\"hello\"}}}\n",
                    "kubernetes.io/change-cause": "kubectl apply --filename=completed.yml --record=true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "hello"
                },
                "clusterIP": "10.152.183.253",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/jirayu/daemonsets",
        "resourceVersion": "42352"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/jirayu/deployments",
        "resourceVersion": "42352"
    },
    "items": [
        {
            "metadata": {
                "name": "hello",
                "namespace": "jirayu",
                "selfLink": "/apis/apps/v1/namespaces/jirayu/deployments/hello",
                "uid": "7169fa48-a0e2-4aa1-99c5-5894389e697d",
                "resourceVersion": "40875",
                "generation": 2,
                "creationTimestamp": "2020-03-12T08:09:31Z",
                "labels": {
                    "app": "hello"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"hello\"},\"name\":\"hello\",\"namespace\":\"jirayu\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"hello\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"hello\"}},\"spec\":{\"containers\":[{\"image\":\"docker.io/dragondarkon/api\",\"imagePullPolicy\":\"Always\",\"name\":\"hello\",\"ports\":[{\"containerPort\":8080}],\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"30Mi\"}}}],\"imagePullSecrets\":[{\"name\":\"registry-secret\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "hello"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "hello"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "hello",
                                "image": "docker.io/dragondarkon/api",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "30Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "imagePullSecrets": [
                            {
                                "name": "registry-secret"
                            }
                        ],
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {}
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/jirayu/replicasets",
        "resourceVersion": "42352"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/jirayu/pods",
        "resourceVersion": "42352"
    },
    "items": []
}
Cluster info dumped to standard output
